# Illustrate the simplest possible thing where a CSV output file is
# generated by some script. The command is rendered with jinja based templating
# on the rest of the keys in that YAML object.
---
creates: data/first.csv
depends: ./src/script.sh
command: {{depends}} > {{creates}}


# This is another pretty common use case that illustrates a dependency
# on another step (in this case, creating data/first.csv). It also
# illustrates how to specify creating a mysql table and how to
# dereference different parts of the dependency chain in the command
# using Jinja templating.
---
creates: mysql:mydb/mytable
depends: 
  - data/first.csv
  - ./src/fill_mytable.py
command: {{depends[1]}} {{creates}} < {{depends[0]}}


# create a directory of files. expand `depends` using default jinja join filter.
---
creates: data/first/
depends: 
  - src/new_file_for_every_row.py
  - data/first.csv
command: python {{depends|join(' ')}} -o {{creates}}


# show how things can depend on multiple steps
---
creates: data/result.png
depends:
  - src/render_result.py
  - data/first.csv
  - data/first/
command: python {{depends|join(' ')}} > {{creates}}


# Illustrate how to run a per-file analysis that is stupidly parallel
# using regex matching to explicitly demonstrate how filenames are
# manipulated. This should make it possible to run our workflow on
# each file separately in addition to running this analysis on every
# file in the directory.
# The idea here/ the use case in mind here is to allow analysis to be
# easily run on one file or all the files in a direcotry.
# 
# COMMAND LINE INTERFACE EXAMPLES:
# [unix]$ workflow run data/per_file
# [unix]$ workflow run data/per_file --filename-root=a_specific_filename
# [unix]$ workflow run data/per_file --time-limit=1s
---
tags: data/per_file
creates: data/per_file/{{filename_root}}.dat
depends:
  - src/process_each_file.py
  - data/first/(?P<filename_root>\w+).dat
  - data/first/
command: python {{depends[0]}} {{depends[1]}} > {{creates}}


# include a suite of analyses from a different directory see
# http://stackoverflow.com/a/9577670/564709
!include workflow/images.yaml


# show how to run multiple commands. Treat a list of commands as
# creating a shell script after rendering the Jinja template
---
creates: data/probability_density.dat
depends: data/first.csv
command:
  - sed 's/[,\n\r]/ /g' < {{depends}} > kk
  - sort -nr2,2k kk > gg
  - awk '{print $1,$2}' gg > {{creates}}


# Illustrate a particularly simple use case where it just creates a
# target without any dependencies. This is particularly useful when
# downloading files that take a while, for example. This is why its
# really important for a workflow to automatically be re-run if a
# target changes. If we change the URL here, for example, we'd want
# this part of the workflow to be re-run.
---
creates: data/download.tgz
command: curl http://somesite.com/download.tgz > {{creates}}


# # mentioning non-existant dependencies in the workflow is a big no-no
# # and should raise a very friendly error that describes how it can be
# # fixed. This commented out target should raise an error that explains
# # that the file dtaa/download.gtz doesn't exist and there isn't a
# # matching `creates` in the workflow.yaml. 
# ---
# creates: data/valid/path.txt
# depends: dtaa/download.gtz
# command: tar xzf {{depends}}


